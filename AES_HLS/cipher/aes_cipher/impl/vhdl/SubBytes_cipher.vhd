-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity SubBytes_cipher_rom is 
    generic(
             dwidth     : integer := 8; 
             awidth     : integer := 10; 
             mem_size    : integer := 768
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          addr1      : in std_logic_vector(awidth-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of SubBytes_cipher_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
signal addr1_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "01100011", 1 => "01111100", 2 => "01110111", 3 => "01111011", 
    4 => "11110010", 5 => "01101011", 6 => "01101111", 7 => "11000101", 
    8 => "00110000", 9 => "00000001", 10 => "01100111", 11 => "00101011", 
    12 => "11111110", 13 => "11010111", 14 => "10101011", 15 => "01110110", 
    16 => "11001010", 17 => "10000010", 18 => "11001001", 19 => "01111101", 
    20 => "11111010", 21 => "01011001", 22 => "01000111", 23 => "11110000", 
    24 => "10101101", 25 => "11010100", 26 => "10100010", 27 => "10101111", 
    28 => "10011100", 29 => "10100100", 30 => "01110010", 31 => "11000000", 
    32 => "10110111", 33 => "11111101", 34 => "10010011", 35 => "00100110", 
    36 => "00110110", 37 => "00111111", 38 => "11110111", 39 => "11001100", 
    40 => "00110100", 41 => "10100101", 42 => "11100101", 43 => "11110001", 
    44 => "01110001", 45 => "11011000", 46 => "00110001", 47 => "00010101", 
    48 => "00000100", 49 => "11000111", 50 => "00100011", 51 => "11000011", 
    52 => "00011000", 53 => "10010110", 54 => "00000101", 55 => "10011010", 
    56 => "00000111", 57 => "00010010", 58 => "10000000", 59 => "11100010", 
    60 => "11101011", 61 => "00100111", 62 => "10110010", 63 => "01110101", 
    64 => "00001001", 65 => "10000011", 66 => "00101100", 67 => "00011010", 
    68 => "00011011", 69 => "01101110", 70 => "01011010", 71 => "10100000", 
    72 => "01010010", 73 => "00111011", 74 => "11010110", 75 => "10110011", 
    76 => "00101001", 77 => "11100011", 78 => "00101111", 79 => "10000100", 
    80 => "01010011", 81 => "11010001", 82 => "00000000", 83 => "11101101", 
    84 => "00100000", 85 => "11111100", 86 => "10110001", 87 => "01011011", 
    88 => "01101010", 89 => "11001011", 90 => "10111110", 91 => "00111001", 
    92 => "01001010", 93 => "01001100", 94 => "01011000", 95 => "11001111", 
    96 => "11010000", 97 => "11101111", 98 => "10101010", 99 => "11111011", 
    100 => "01000011", 101 => "01001101", 102 => "00110011", 103 => "10000101", 
    104 => "01000101", 105 => "11111001", 106 => "00000010", 107 => "01111111", 
    108 => "01010000", 109 => "00111100", 110 => "10011111", 111 => "10101000", 
    112 => "01010001", 113 => "10100011", 114 => "01000000", 115 => "10001111", 
    116 => "10010010", 117 => "10011101", 118 => "00111000", 119 => "11110101", 
    120 => "10111100", 121 => "10110110", 122 => "11011010", 123 => "00100001", 
    124 => "00010000", 125 => "11111111", 126 => "11110011", 127 => "11010010", 
    128 => "11001101", 129 => "00001100", 130 => "00010011", 131 => "11101100", 
    132 => "01011111", 133 => "10010111", 134 => "01000100", 135 => "00010111", 
    136 => "11000100", 137 => "10100111", 138 => "01111110", 139 => "00111101", 
    140 => "01100100", 141 => "01011101", 142 => "00011001", 143 => "01110011", 
    144 => "01100000", 145 => "10000001", 146 => "01001111", 147 => "11011100", 
    148 => "00100010", 149 => "00101010", 150 => "10010000", 151 => "10001000", 
    152 => "01000110", 153 => "11101110", 154 => "10111000", 155 => "00010100", 
    156 => "11011110", 157 => "01011110", 158 => "00001011", 159 => "11011011", 
    160 => "11100000", 161 => "00110010", 162 => "00111010", 163 => "00001010", 
    164 => "01001001", 165 => "00000110", 166 => "00100100", 167 => "01011100", 
    168 => "11000010", 169 => "11010011", 170 => "10101100", 171 => "01100010", 
    172 => "10010001", 173 => "10010101", 174 => "11100100", 175 => "01111001", 
    176 => "11100111", 177 => "11001000", 178 => "00110111", 179 => "01101101", 
    180 => "10001101", 181 => "11010101", 182 => "01001110", 183 => "10101001", 
    184 => "01101100", 185 => "01010110", 186 => "11110100", 187 => "11101010", 
    188 => "01100101", 189 => "01111010", 190 => "10101110", 191 => "00001000", 
    192 => "10111010", 193 => "01111000", 194 => "00100101", 195 => "00101110", 
    196 => "00011100", 197 => "10100110", 198 => "10110100", 199 => "11000110", 
    200 => "11101000", 201 => "11011101", 202 => "01110100", 203 => "00011111", 
    204 => "01001011", 205 => "10111101", 206 => "10001011", 207 => "10001010", 
    208 => "01110000", 209 => "00111110", 210 => "10110101", 211 => "01100110", 
    212 => "01001000", 213 => "00000011", 214 => "11110110", 215 => "00001110", 
    216 => "01100001", 217 => "00110101", 218 => "01010111", 219 => "10111001", 
    220 => "10000110", 221 => "11000001", 222 => "00011101", 223 => "10011110", 
    224 => "11100001", 225 => "11111000", 226 => "10011000", 227 => "00010001", 
    228 => "01101001", 229 => "11011001", 230 => "10001110", 231 => "10010100", 
    232 => "10011011", 233 => "00011110", 234 => "10000111", 235 => "11101001", 
    236 => "11001110", 237 => "01010101", 238 => "00101000", 239 => "11011111", 
    240 => "10001100", 241 => "10100001", 242 => "10001001", 243 => "00001101", 
    244 => "10111111", 245 => "11100110", 246 => "01000010", 247 => "01101000", 
    248 => "01000001", 249 => "10011001", 250 => "00101101", 251 => "00001111", 
    252 => "10110000", 253 => "01010100", 254 => "10111011", 255 => "00010110", 
    256 => "00000000", 257 => "00000010", 258 => "00000100", 259 => "00000110", 
    260 => "00001000", 261 => "00001010", 262 => "00001100", 263 => "00001110", 
    264 => "00010000", 265 => "00010010", 266 => "00010100", 267 => "00010110", 
    268 => "00011000", 269 => "00011010", 270 => "00011100", 271 => "00011110", 
    272 => "00100000", 273 => "00100010", 274 => "00100100", 275 => "00100110", 
    276 => "00101000", 277 => "00101010", 278 => "00101100", 279 => "00101110", 
    280 => "00110000", 281 => "00110010", 282 => "00110100", 283 => "00110110", 
    284 => "00111000", 285 => "00111010", 286 => "00111100", 287 => "00111110", 
    288 => "01000000", 289 => "01000010", 290 => "01000100", 291 => "01000110", 
    292 => "01001000", 293 => "01001010", 294 => "01001100", 295 => "01001110", 
    296 => "01010000", 297 => "01010010", 298 => "01010100", 299 => "01010110", 
    300 => "01011000", 301 => "01011010", 302 => "01011100", 303 => "01011110", 
    304 => "01100000", 305 => "01100010", 306 => "01100100", 307 => "01100110", 
    308 => "01101000", 309 => "01101010", 310 => "01101100", 311 => "01101110", 
    312 => "01110000", 313 => "01110010", 314 => "01110100", 315 => "01110110", 
    316 => "01111000", 317 => "01111010", 318 => "01111100", 319 => "01111110", 
    320 => "10000000", 321 => "10000010", 322 => "10000100", 323 => "10000110", 
    324 => "10001000", 325 => "10001010", 326 => "10001100", 327 => "10001110", 
    328 => "10010000", 329 => "10010010", 330 => "10010100", 331 => "10010110", 
    332 => "10011000", 333 => "10011010", 334 => "10011100", 335 => "10011110", 
    336 => "10100000", 337 => "10100010", 338 => "10100100", 339 => "10100110", 
    340 => "10101000", 341 => "10101010", 342 => "10101100", 343 => "10101110", 
    344 => "10110000", 345 => "10110010", 346 => "10110100", 347 => "10110110", 
    348 => "10111000", 349 => "10111010", 350 => "10111100", 351 => "10111110", 
    352 => "11000000", 353 => "11000010", 354 => "11000100", 355 => "11000110", 
    356 => "11001000", 357 => "11001010", 358 => "11001100", 359 => "11001110", 
    360 => "11010000", 361 => "11010010", 362 => "11010100", 363 => "11010110", 
    364 => "11011000", 365 => "11011010", 366 => "11011100", 367 => "11011110", 
    368 => "11100000", 369 => "11100010", 370 => "11100100", 371 => "11100110", 
    372 => "11101000", 373 => "11101010", 374 => "11101100", 375 => "11101110", 
    376 => "11110000", 377 => "11110010", 378 => "11110100", 379 => "11110110", 
    380 => "11111000", 381 => "11111010", 382 => "11111100", 383 => "11111110", 
    384 => "00011011", 385 => "00011001", 386 => "00011111", 387 => "00011101", 
    388 => "00010011", 389 => "00010001", 390 => "00010111", 391 => "00010101", 
    392 => "00001011", 393 => "00001001", 394 => "00001111", 395 => "00001101", 
    396 => "00000011", 397 => "00000001", 398 => "00000111", 399 => "00000101", 
    400 => "00111011", 401 => "00111001", 402 => "00111111", 403 => "00111101", 
    404 => "00110011", 405 => "00110001", 406 => "00110111", 407 => "00110101", 
    408 => "00101011", 409 => "00101001", 410 => "00101111", 411 => "00101101", 
    412 => "00100011", 413 => "00100001", 414 => "00100111", 415 => "00100101", 
    416 => "01011011", 417 => "01011001", 418 => "01011111", 419 => "01011101", 
    420 => "01010011", 421 => "01010001", 422 => "01010111", 423 => "01010101", 
    424 => "01001011", 425 => "01001001", 426 => "01001111", 427 => "01001101", 
    428 => "01000011", 429 => "01000001", 430 => "01000111", 431 => "01000101", 
    432 => "01111011", 433 => "01111001", 434 => "01111111", 435 => "01111101", 
    436 => "01110011", 437 => "01110001", 438 => "01110111", 439 => "01110101", 
    440 => "01101011", 441 => "01101001", 442 => "01101111", 443 => "01101101", 
    444 => "01100011", 445 => "01100001", 446 => "01100111", 447 => "01100101", 
    448 => "10011011", 449 => "10011001", 450 => "10011111", 451 => "10011101", 
    452 => "10010011", 453 => "10010001", 454 => "10010111", 455 => "10010101", 
    456 => "10001011", 457 => "10001001", 458 => "10001111", 459 => "10001101", 
    460 => "10000011", 461 => "10000001", 462 => "10000111", 463 => "10000101", 
    464 => "10111011", 465 => "10111001", 466 => "10111111", 467 => "10111101", 
    468 => "10110011", 469 => "10110001", 470 => "10110111", 471 => "10110101", 
    472 => "10101011", 473 => "10101001", 474 => "10101111", 475 => "10101101", 
    476 => "10100011", 477 => "10100001", 478 => "10100111", 479 => "10100101", 
    480 => "11011011", 481 => "11011001", 482 => "11011111", 483 => "11011101", 
    484 => "11010011", 485 => "11010001", 486 => "11010111", 487 => "11010101", 
    488 => "11001011", 489 => "11001001", 490 => "11001111", 491 => "11001101", 
    492 => "11000011", 493 => "11000001", 494 => "11000111", 495 => "11000101", 
    496 => "11111011", 497 => "11111001", 498 => "11111111", 499 => "11111101", 
    500 => "11110011", 501 => "11110001", 502 => "11110111", 503 => "11110101", 
    504 => "11101011", 505 => "11101001", 506 => "11101111", 507 => "11101101", 
    508 => "11100011", 509 => "11100001", 510 => "11100111", 511 => "11100101", 
    512 => "00000000", 513 => "00000011", 514 => "00000110", 515 => "00000101", 
    516 => "00001100", 517 => "00001111", 518 => "00001010", 519 => "00001001", 
    520 => "00011000", 521 => "00011011", 522 => "00011110", 523 => "00011101", 
    524 => "00010100", 525 => "00010111", 526 => "00010010", 527 => "00010001", 
    528 => "00110000", 529 => "00110011", 530 => "00110110", 531 => "00110101", 
    532 => "00111100", 533 => "00111111", 534 => "00111010", 535 => "00111001", 
    536 => "00101000", 537 => "00101011", 538 => "00101110", 539 => "00101101", 
    540 => "00100100", 541 => "00100111", 542 => "00100010", 543 => "00100001", 
    544 => "01100000", 545 => "01100011", 546 => "01100110", 547 => "01100101", 
    548 => "01101100", 549 => "01101111", 550 => "01101010", 551 => "01101001", 
    552 => "01111000", 553 => "01111011", 554 => "01111110", 555 => "01111101", 
    556 => "01110100", 557 => "01110111", 558 => "01110010", 559 => "01110001", 
    560 => "01010000", 561 => "01010011", 562 => "01010110", 563 => "01010101", 
    564 => "01011100", 565 => "01011111", 566 => "01011010", 567 => "01011001", 
    568 => "01001000", 569 => "01001011", 570 => "01001110", 571 => "01001101", 
    572 => "01000100", 573 => "01000111", 574 => "01000010", 575 => "01000001", 
    576 => "11000000", 577 => "11000011", 578 => "11000110", 579 => "11000101", 
    580 => "11001100", 581 => "11001111", 582 => "11001010", 583 => "11001001", 
    584 => "11011000", 585 => "11011011", 586 => "11011110", 587 => "11011101", 
    588 => "11010100", 589 => "11010111", 590 => "11010010", 591 => "11010001", 
    592 => "11110000", 593 => "11110011", 594 => "11110110", 595 => "11110101", 
    596 => "11111100", 597 => "11111111", 598 => "11111010", 599 => "11111001", 
    600 => "11101000", 601 => "11101011", 602 => "11101110", 603 => "11101101", 
    604 => "11100100", 605 => "11100111", 606 => "11100010", 607 => "11100001", 
    608 => "10100000", 609 => "10100011", 610 => "10100110", 611 => "10100101", 
    612 => "10101100", 613 => "10101111", 614 => "10101010", 615 => "10101001", 
    616 => "10111000", 617 => "10111011", 618 => "10111110", 619 => "10111101", 
    620 => "10110100", 621 => "10110111", 622 => "10110010", 623 => "10110001", 
    624 => "10010000", 625 => "10010011", 626 => "10010110", 627 => "10010101", 
    628 => "10011100", 629 => "10011111", 630 => "10011010", 631 => "10011001", 
    632 => "10001000", 633 => "10001011", 634 => "10001110", 635 => "10001101", 
    636 => "10000100", 637 => "10000111", 638 => "10000010", 639 => "10000001", 
    640 => "10011011", 641 => "10011000", 642 => "10011101", 643 => "10011110", 
    644 => "10010111", 645 => "10010100", 646 => "10010001", 647 => "10010010", 
    648 => "10000011", 649 => "10000000", 650 => "10000101", 651 => "10000110", 
    652 => "10001111", 653 => "10001100", 654 => "10001001", 655 => "10001010", 
    656 => "10101011", 657 => "10101000", 658 => "10101101", 659 => "10101110", 
    660 => "10100111", 661 => "10100100", 662 => "10100001", 663 => "10100010", 
    664 => "10110011", 665 => "10110000", 666 => "10110101", 667 => "10110110", 
    668 => "10111111", 669 => "10111100", 670 => "10111001", 671 => "10111010", 
    672 => "11111011", 673 => "11111000", 674 => "11111101", 675 => "11111110", 
    676 => "11110111", 677 => "11110100", 678 => "11110001", 679 => "11110010", 
    680 => "11100011", 681 => "11100000", 682 => "11100101", 683 => "11100110", 
    684 => "11101111", 685 => "11101100", 686 => "11101001", 687 => "11101010", 
    688 => "11001011", 689 => "11001000", 690 => "11001101", 691 => "11001110", 
    692 => "11000111", 693 => "11000100", 694 => "11000001", 695 => "11000010", 
    696 => "11010011", 697 => "11010000", 698 => "11010101", 699 => "11010110", 
    700 => "11011111", 701 => "11011100", 702 => "11011001", 703 => "11011010", 
    704 => "01011011", 705 => "01011000", 706 => "01011101", 707 => "01011110", 
    708 => "01010111", 709 => "01010100", 710 => "01010001", 711 => "01010010", 
    712 => "01000011", 713 => "01000000", 714 => "01000101", 715 => "01000110", 
    716 => "01001111", 717 => "01001100", 718 => "01001001", 719 => "01001010", 
    720 => "01101011", 721 => "01101000", 722 => "01101101", 723 => "01101110", 
    724 => "01100111", 725 => "01100100", 726 => "01100001", 727 => "01100010", 
    728 => "01110011", 729 => "01110000", 730 => "01110101", 731 => "01110110", 
    732 => "01111111", 733 => "01111100", 734 => "01111001", 735 => "01111010", 
    736 => "00111011", 737 => "00111000", 738 => "00111101", 739 => "00111110", 
    740 => "00110111", 741 => "00110100", 742 => "00110001", 743 => "00110010", 
    744 => "00100011", 745 => "00100000", 746 => "00100101", 747 => "00100110", 
    748 => "00101111", 749 => "00101100", 750 => "00101001", 751 => "00101010", 
    752 => "00001011", 753 => "00001000", 754 => "00001101", 755 => "00001110", 
    756 => "00000111", 757 => "00000100", 758 => "00000001", 759 => "00000010", 
    760 => "00010011", 761 => "00010000", 762 => "00010101", 763 => "00010110", 
    764 => "00011111", 765 => "00011100", 766 => "00011001", 767 => "00011010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity SubBytes_cipher is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 768;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of SubBytes_cipher is
    component SubBytes_cipher_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    SubBytes_cipher_rom_U :  component SubBytes_cipher_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


