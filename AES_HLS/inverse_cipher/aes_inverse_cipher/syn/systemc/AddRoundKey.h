// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AddRoundKey_HH_
#define _AddRoundKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct AddRoundKey : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_address0;
    sc_out< sc_logic > state_ce0;
    sc_out< sc_logic > state_we0;
    sc_out< sc_lv<8> > state_d0;
    sc_in< sc_lv<8> > state_q0;
    sc_out< sc_lv<4> > state_address1;
    sc_out< sc_logic > state_ce1;
    sc_out< sc_logic > state_we1;
    sc_out< sc_lv<8> > state_d1;
    sc_in< sc_lv<8> > state_q1;
    sc_in< sc_lv<8> > roundKey_TDATA;
    sc_in< sc_logic > roundKey_TVALID;
    sc_out< sc_logic > roundKey_TREADY;


    // Module declarations
    AddRoundKey(sc_module_name name);
    SC_HAS_PROCESS(AddRoundKey);

    ~AddRoundKey();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > roundKey_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > reg_205;
    sc_signal< sc_lv<8> > reg_210;
    sc_signal< sc_lv<8> > reg_215;
    sc_signal< sc_lv<8> > grp_fu_220_p2;
    sc_signal< sc_lv<8> > reg_238;
    sc_signal< sc_lv<8> > grp_fu_226_p2;
    sc_signal< sc_lv<8> > reg_244;
    sc_signal< sc_lv<8> > grp_fu_232_p2;
    sc_signal< sc_lv<8> > reg_250;
    sc_signal< sc_lv<8> > roundKey_read_reg_294;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<4> > state_addr_reg_299;
    sc_signal< sc_lv<4> > state_addr_48_reg_304;
    sc_signal< sc_lv<8> > tmp_s_fu_256_p2;
    sc_signal< sc_lv<8> > tmp_s_reg_309;
    sc_signal< sc_lv<8> > tmp_65_1_fu_261_p2;
    sc_signal< sc_lv<8> > tmp_65_1_reg_314;
    sc_signal< sc_lv<4> > state_addr_49_reg_319;
    sc_signal< sc_lv<4> > state_addr_50_reg_324;
    sc_signal< sc_lv<8> > tmp_65_2_fu_267_p2;
    sc_signal< sc_lv<8> > tmp_65_2_reg_329;
    sc_signal< sc_lv<4> > state_addr_51_reg_334;
    sc_signal< sc_lv<4> > state_addr_52_reg_339;
    sc_signal< sc_lv<4> > state_addr_53_reg_344;
    sc_signal< sc_lv<4> > state_addr_54_reg_349;
    sc_signal< sc_lv<8> > tmp_65_4_reg_354;
    sc_signal< sc_lv<4> > state_addr_55_reg_359;
    sc_signal< sc_lv<4> > state_addr_56_reg_364;
    sc_signal< sc_lv<8> > state_load_9_reg_369;
    sc_signal< sc_lv<4> > state_addr_57_reg_374;
    sc_signal< sc_lv<4> > state_addr_58_reg_379;
    sc_signal< sc_lv<8> > tmp_65_6_reg_384;
    sc_signal< sc_lv<8> > state_load_11_reg_389;
    sc_signal< sc_lv<4> > state_addr_59_reg_394;
    sc_signal< sc_lv<4> > state_addr_60_reg_399;
    sc_signal< sc_lv<8> > state_load_13_reg_404;
    sc_signal< sc_lv<4> > state_addr_61_reg_409;
    sc_signal< sc_lv<4> > state_addr_62_reg_414;
    sc_signal< sc_lv<8> > tmp_65_8_reg_419;
    sc_signal< sc_lv<8> > state_load_15_reg_424;
    sc_signal< sc_lv<8> > tmp_65_9_fu_273_p2;
    sc_signal< sc_lv<8> > tmp_65_9_reg_429;
    sc_signal< sc_lv<8> > tmp_65_10_fu_278_p2;
    sc_signal< sc_lv<8> > tmp_65_10_reg_434;
    sc_signal< sc_lv<8> > tmp_65_12_fu_283_p2;
    sc_signal< sc_lv<8> > tmp_65_12_reg_439;
    sc_signal< sc_lv<8> > tmp_65_14_fu_288_p2;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_220_p2();
    void thread_grp_fu_226_p2();
    void thread_grp_fu_232_p2();
    void thread_roundKey_TDATA_blk_n();
    void thread_roundKey_TREADY();
    void thread_state_addr_48_reg_304();
    void thread_state_addr_49_reg_319();
    void thread_state_addr_50_reg_324();
    void thread_state_addr_51_reg_334();
    void thread_state_addr_52_reg_339();
    void thread_state_addr_53_reg_344();
    void thread_state_addr_54_reg_349();
    void thread_state_addr_55_reg_359();
    void thread_state_addr_56_reg_364();
    void thread_state_addr_57_reg_374();
    void thread_state_addr_58_reg_379();
    void thread_state_addr_59_reg_394();
    void thread_state_addr_60_reg_399();
    void thread_state_addr_61_reg_409();
    void thread_state_addr_62_reg_414();
    void thread_state_addr_reg_299();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_d1();
    void thread_state_we0();
    void thread_state_we1();
    void thread_tmp_65_10_fu_278_p2();
    void thread_tmp_65_12_fu_283_p2();
    void thread_tmp_65_14_fu_288_p2();
    void thread_tmp_65_1_fu_261_p2();
    void thread_tmp_65_2_fu_267_p2();
    void thread_tmp_65_9_fu_273_p2();
    void thread_tmp_s_fu_256_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
