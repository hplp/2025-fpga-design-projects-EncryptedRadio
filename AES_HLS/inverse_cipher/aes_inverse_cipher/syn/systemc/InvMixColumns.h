// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _InvMixColumns_HH_
#define _InvMixColumns_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "InvMixColumns_invdEe.h"
#include "InvShiftRows_tmp_bkb.h"

namespace ap_rtl {

struct InvMixColumns : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_address0;
    sc_out< sc_logic > state_ce0;
    sc_out< sc_logic > state_we0;
    sc_out< sc_lv<8> > state_d0;
    sc_in< sc_lv<8> > state_q0;
    sc_out< sc_lv<4> > state_address1;
    sc_out< sc_logic > state_ce1;
    sc_in< sc_lv<8> > state_q1;


    // Module declarations
    InvMixColumns(sc_module_name name);
    SC_HAS_PROCESS(InvMixColumns);

    ~InvMixColumns();

    sc_trace_file* mVcdFile;

    InvMixColumns_invdEe* inverse_cipher_U;
    InvShiftRows_tmp_bkb* tmp_state_U;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > inverse_cipher_address0;
    sc_signal< sc_logic > inverse_cipher_ce0;
    sc_signal< sc_lv<8> > inverse_cipher_q0;
    sc_signal< sc_lv<11> > inverse_cipher_address1;
    sc_signal< sc_logic > inverse_cipher_ce1;
    sc_signal< sc_lv<8> > inverse_cipher_q1;
    sc_signal< sc_lv<11> > inverse_cipher_address2;
    sc_signal< sc_logic > inverse_cipher_ce2;
    sc_signal< sc_lv<8> > inverse_cipher_q2;
    sc_signal< sc_lv<11> > inverse_cipher_address3;
    sc_signal< sc_logic > inverse_cipher_ce3;
    sc_signal< sc_lv<8> > inverse_cipher_q3;
    sc_signal< sc_lv<11> > inverse_cipher_address4;
    sc_signal< sc_logic > inverse_cipher_ce4;
    sc_signal< sc_lv<8> > inverse_cipher_q4;
    sc_signal< sc_lv<11> > inverse_cipher_address5;
    sc_signal< sc_logic > inverse_cipher_ce5;
    sc_signal< sc_lv<8> > inverse_cipher_q5;
    sc_signal< sc_lv<11> > inverse_cipher_address6;
    sc_signal< sc_logic > inverse_cipher_ce6;
    sc_signal< sc_lv<8> > inverse_cipher_q6;
    sc_signal< sc_lv<11> > inverse_cipher_address7;
    sc_signal< sc_logic > inverse_cipher_ce7;
    sc_signal< sc_lv<8> > inverse_cipher_q7;
    sc_signal< sc_lv<11> > inverse_cipher_address8;
    sc_signal< sc_logic > inverse_cipher_ce8;
    sc_signal< sc_lv<8> > inverse_cipher_q8;
    sc_signal< sc_lv<11> > inverse_cipher_address9;
    sc_signal< sc_logic > inverse_cipher_ce9;
    sc_signal< sc_lv<8> > inverse_cipher_q9;
    sc_signal< sc_lv<11> > inverse_cipher_address10;
    sc_signal< sc_logic > inverse_cipher_ce10;
    sc_signal< sc_lv<8> > inverse_cipher_q10;
    sc_signal< sc_lv<11> > inverse_cipher_address11;
    sc_signal< sc_logic > inverse_cipher_ce11;
    sc_signal< sc_lv<8> > inverse_cipher_q11;
    sc_signal< sc_lv<11> > inverse_cipher_address12;
    sc_signal< sc_logic > inverse_cipher_ce12;
    sc_signal< sc_lv<8> > inverse_cipher_q12;
    sc_signal< sc_lv<11> > inverse_cipher_address13;
    sc_signal< sc_logic > inverse_cipher_ce13;
    sc_signal< sc_lv<8> > inverse_cipher_q13;
    sc_signal< sc_lv<11> > inverse_cipher_address14;
    sc_signal< sc_logic > inverse_cipher_ce14;
    sc_signal< sc_lv<8> > inverse_cipher_q14;
    sc_signal< sc_lv<11> > inverse_cipher_address15;
    sc_signal< sc_logic > inverse_cipher_ce15;
    sc_signal< sc_lv<8> > inverse_cipher_q15;
    sc_signal< sc_lv<8> > reg_934;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > reg_938;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_s_fu_1136_p2;
    sc_signal< sc_lv<8> > tmp_s_reg_1941;
    sc_signal< sc_lv<8> > tmp_2_fu_1154_p2;
    sc_signal< sc_lv<8> > tmp_2_reg_1946;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_6_fu_1354_p2;
    sc_signal< sc_lv<8> > tmp_6_reg_2051;
    sc_signal< sc_lv<8> > tmp_7_fu_1372_p2;
    sc_signal< sc_lv<8> > tmp_7_reg_2056;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > tmp_10_fu_1572_p2;
    sc_signal< sc_lv<8> > tmp_10_reg_2161;
    sc_signal< sc_lv<8> > tmp_11_fu_1590_p2;
    sc_signal< sc_lv<8> > tmp_11_reg_2166;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > tmp_14_fu_1790_p2;
    sc_signal< sc_lv<8> > tmp_14_reg_2261;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > tmp_15_fu_1808_p2;
    sc_signal< sc_lv<8> > tmp_15_reg_2266;
    sc_signal< sc_lv<5> > i_2_fu_1820_p2;
    sc_signal< sc_lv<5> > i_2_reg_2274;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > tmp_17_fu_1826_p1;
    sc_signal< sc_lv<64> > tmp_17_reg_2279;
    sc_signal< sc_lv<1> > tmp_16_fu_1814_p2;
    sc_signal< sc_lv<4> > tmp_state_address0;
    sc_signal< sc_logic > tmp_state_ce0;
    sc_signal< sc_logic > tmp_state_we0;
    sc_signal< sc_lv<8> > tmp_state_d0;
    sc_signal< sc_lv<8> > tmp_state_q0;
    sc_signal< sc_lv<4> > tmp_state_address1;
    sc_signal< sc_logic > tmp_state_ce1;
    sc_signal< sc_logic > tmp_state_we1;
    sc_signal< sc_lv<8> > tmp_state_d1;
    sc_signal< sc_lv<5> > i_reg_923;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > addr_fu_942_p3;
    sc_signal< sc_lv<64> > addr1_fu_951_p3;
    sc_signal< sc_lv<64> > addr2_fu_960_p3;
    sc_signal< sc_lv<64> > addr3_fu_969_p3;
    sc_signal< sc_lv<64> > addr4_fu_978_p3;
    sc_signal< sc_lv<64> > addr5_fu_987_p3;
    sc_signal< sc_lv<64> > addr6_fu_996_p3;
    sc_signal< sc_lv<64> > addr7_fu_1005_p3;
    sc_signal< sc_lv<64> > addr8_fu_1014_p3;
    sc_signal< sc_lv<64> > addr9_fu_1023_p3;
    sc_signal< sc_lv<64> > addr10_fu_1032_p3;
    sc_signal< sc_lv<64> > addr11_fu_1041_p3;
    sc_signal< sc_lv<64> > addr12_fu_1050_p3;
    sc_signal< sc_lv<64> > addr13_fu_1059_p3;
    sc_signal< sc_lv<64> > addr14_fu_1068_p3;
    sc_signal< sc_lv<64> > addr15_fu_1077_p3;
    sc_signal< sc_lv<64> > addr16_fu_1160_p3;
    sc_signal< sc_lv<64> > addr17_fu_1169_p3;
    sc_signal< sc_lv<64> > addr18_fu_1178_p3;
    sc_signal< sc_lv<64> > addr19_fu_1187_p3;
    sc_signal< sc_lv<64> > addr20_fu_1196_p3;
    sc_signal< sc_lv<64> > addr21_fu_1205_p3;
    sc_signal< sc_lv<64> > addr22_fu_1214_p3;
    sc_signal< sc_lv<64> > addr23_fu_1223_p3;
    sc_signal< sc_lv<64> > addr24_fu_1232_p3;
    sc_signal< sc_lv<64> > addr25_fu_1241_p3;
    sc_signal< sc_lv<64> > addr26_fu_1250_p3;
    sc_signal< sc_lv<64> > addr27_fu_1259_p3;
    sc_signal< sc_lv<64> > addr28_fu_1268_p3;
    sc_signal< sc_lv<64> > addr29_fu_1277_p3;
    sc_signal< sc_lv<64> > addr30_fu_1286_p3;
    sc_signal< sc_lv<64> > addr31_fu_1295_p3;
    sc_signal< sc_lv<64> > addr32_fu_1378_p3;
    sc_signal< sc_lv<64> > addr33_fu_1387_p3;
    sc_signal< sc_lv<64> > addr34_fu_1396_p3;
    sc_signal< sc_lv<64> > addr35_fu_1405_p3;
    sc_signal< sc_lv<64> > addr36_fu_1414_p3;
    sc_signal< sc_lv<64> > addr37_fu_1423_p3;
    sc_signal< sc_lv<64> > addr38_fu_1432_p3;
    sc_signal< sc_lv<64> > addr39_fu_1441_p3;
    sc_signal< sc_lv<64> > addr40_fu_1450_p3;
    sc_signal< sc_lv<64> > addr41_fu_1459_p3;
    sc_signal< sc_lv<64> > addr42_fu_1468_p3;
    sc_signal< sc_lv<64> > addr43_fu_1477_p3;
    sc_signal< sc_lv<64> > addr44_fu_1486_p3;
    sc_signal< sc_lv<64> > addr45_fu_1495_p3;
    sc_signal< sc_lv<64> > addr46_fu_1504_p3;
    sc_signal< sc_lv<64> > addr47_fu_1513_p3;
    sc_signal< sc_lv<64> > addr48_fu_1596_p3;
    sc_signal< sc_lv<64> > addr49_fu_1605_p3;
    sc_signal< sc_lv<64> > addr50_fu_1614_p3;
    sc_signal< sc_lv<64> > addr51_fu_1623_p3;
    sc_signal< sc_lv<64> > addr52_fu_1632_p3;
    sc_signal< sc_lv<64> > addr53_fu_1641_p3;
    sc_signal< sc_lv<64> > addr54_fu_1650_p3;
    sc_signal< sc_lv<64> > addr55_fu_1659_p3;
    sc_signal< sc_lv<64> > addr56_fu_1668_p3;
    sc_signal< sc_lv<64> > addr57_fu_1677_p3;
    sc_signal< sc_lv<64> > addr58_fu_1686_p3;
    sc_signal< sc_lv<64> > addr59_fu_1695_p3;
    sc_signal< sc_lv<64> > addr60_fu_1704_p3;
    sc_signal< sc_lv<64> > addr61_fu_1713_p3;
    sc_signal< sc_lv<64> > addr62_fu_1722_p3;
    sc_signal< sc_lv<64> > addr63_fu_1731_p3;
    sc_signal< sc_lv<8> > tmp_1_fu_1098_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_1117_p2;
    sc_signal< sc_lv<8> > tmp_3_fu_1316_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_1335_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_1534_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_1553_p2;
    sc_signal< sc_lv<8> > tmp_12_fu_1752_p2;
    sc_signal< sc_lv<8> > tmp_13_fu_1771_p2;
    sc_signal< sc_lv<8> > tmp2_fu_1092_p2;
    sc_signal< sc_lv<8> > tmp1_fu_1086_p2;
    sc_signal< sc_lv<8> > tmp4_fu_1111_p2;
    sc_signal< sc_lv<8> > tmp3_fu_1105_p2;
    sc_signal< sc_lv<8> > tmp6_fu_1130_p2;
    sc_signal< sc_lv<8> > tmp5_fu_1124_p2;
    sc_signal< sc_lv<8> > tmp8_fu_1148_p2;
    sc_signal< sc_lv<8> > tmp7_fu_1142_p2;
    sc_signal< sc_lv<8> > tmp_fu_1310_p2;
    sc_signal< sc_lv<8> > tmp9_fu_1304_p2;
    sc_signal< sc_lv<8> > tmp11_fu_1329_p2;
    sc_signal< sc_lv<8> > tmp10_fu_1323_p2;
    sc_signal< sc_lv<8> > tmp13_fu_1348_p2;
    sc_signal< sc_lv<8> > tmp12_fu_1342_p2;
    sc_signal< sc_lv<8> > tmp15_fu_1366_p2;
    sc_signal< sc_lv<8> > tmp14_fu_1360_p2;
    sc_signal< sc_lv<8> > tmp17_fu_1528_p2;
    sc_signal< sc_lv<8> > tmp16_fu_1522_p2;
    sc_signal< sc_lv<8> > tmp19_fu_1547_p2;
    sc_signal< sc_lv<8> > tmp18_fu_1541_p2;
    sc_signal< sc_lv<8> > tmp21_fu_1566_p2;
    sc_signal< sc_lv<8> > tmp20_fu_1560_p2;
    sc_signal< sc_lv<8> > tmp23_fu_1584_p2;
    sc_signal< sc_lv<8> > tmp22_fu_1578_p2;
    sc_signal< sc_lv<8> > tmp25_fu_1746_p2;
    sc_signal< sc_lv<8> > tmp24_fu_1740_p2;
    sc_signal< sc_lv<8> > tmp27_fu_1765_p2;
    sc_signal< sc_lv<8> > tmp26_fu_1759_p2;
    sc_signal< sc_lv<8> > tmp29_fu_1784_p2;
    sc_signal< sc_lv<8> > tmp28_fu_1778_p2;
    sc_signal< sc_lv<8> > tmp31_fu_1802_p2;
    sc_signal< sc_lv<8> > tmp30_fu_1796_p2;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_state9;
    static const sc_lv<13> ap_ST_fsm_state10;
    static const sc_lv<13> ap_ST_fsm_state11;
    static const sc_lv<13> ap_ST_fsm_state12;
    static const sc_lv<13> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<56> ap_const_lv56_4;
    static const sc_lv<56> ap_const_lv56_2;
    static const sc_lv<56> ap_const_lv56_3;
    static const sc_lv<56> ap_const_lv56_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_addr10_fu_1032_p3();
    void thread_addr11_fu_1041_p3();
    void thread_addr12_fu_1050_p3();
    void thread_addr13_fu_1059_p3();
    void thread_addr14_fu_1068_p3();
    void thread_addr15_fu_1077_p3();
    void thread_addr16_fu_1160_p3();
    void thread_addr17_fu_1169_p3();
    void thread_addr18_fu_1178_p3();
    void thread_addr19_fu_1187_p3();
    void thread_addr1_fu_951_p3();
    void thread_addr20_fu_1196_p3();
    void thread_addr21_fu_1205_p3();
    void thread_addr22_fu_1214_p3();
    void thread_addr23_fu_1223_p3();
    void thread_addr24_fu_1232_p3();
    void thread_addr25_fu_1241_p3();
    void thread_addr26_fu_1250_p3();
    void thread_addr27_fu_1259_p3();
    void thread_addr28_fu_1268_p3();
    void thread_addr29_fu_1277_p3();
    void thread_addr2_fu_960_p3();
    void thread_addr30_fu_1286_p3();
    void thread_addr31_fu_1295_p3();
    void thread_addr32_fu_1378_p3();
    void thread_addr33_fu_1387_p3();
    void thread_addr34_fu_1396_p3();
    void thread_addr35_fu_1405_p3();
    void thread_addr36_fu_1414_p3();
    void thread_addr37_fu_1423_p3();
    void thread_addr38_fu_1432_p3();
    void thread_addr39_fu_1441_p3();
    void thread_addr3_fu_969_p3();
    void thread_addr40_fu_1450_p3();
    void thread_addr41_fu_1459_p3();
    void thread_addr42_fu_1468_p3();
    void thread_addr43_fu_1477_p3();
    void thread_addr44_fu_1486_p3();
    void thread_addr45_fu_1495_p3();
    void thread_addr46_fu_1504_p3();
    void thread_addr47_fu_1513_p3();
    void thread_addr48_fu_1596_p3();
    void thread_addr49_fu_1605_p3();
    void thread_addr4_fu_978_p3();
    void thread_addr50_fu_1614_p3();
    void thread_addr51_fu_1623_p3();
    void thread_addr52_fu_1632_p3();
    void thread_addr53_fu_1641_p3();
    void thread_addr54_fu_1650_p3();
    void thread_addr55_fu_1659_p3();
    void thread_addr56_fu_1668_p3();
    void thread_addr57_fu_1677_p3();
    void thread_addr58_fu_1686_p3();
    void thread_addr59_fu_1695_p3();
    void thread_addr5_fu_987_p3();
    void thread_addr60_fu_1704_p3();
    void thread_addr61_fu_1713_p3();
    void thread_addr62_fu_1722_p3();
    void thread_addr63_fu_1731_p3();
    void thread_addr6_fu_996_p3();
    void thread_addr7_fu_1005_p3();
    void thread_addr8_fu_1014_p3();
    void thread_addr9_fu_1023_p3();
    void thread_addr_fu_942_p3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_2_fu_1820_p2();
    void thread_inverse_cipher_address0();
    void thread_inverse_cipher_address1();
    void thread_inverse_cipher_address10();
    void thread_inverse_cipher_address11();
    void thread_inverse_cipher_address12();
    void thread_inverse_cipher_address13();
    void thread_inverse_cipher_address14();
    void thread_inverse_cipher_address15();
    void thread_inverse_cipher_address2();
    void thread_inverse_cipher_address3();
    void thread_inverse_cipher_address4();
    void thread_inverse_cipher_address5();
    void thread_inverse_cipher_address6();
    void thread_inverse_cipher_address7();
    void thread_inverse_cipher_address8();
    void thread_inverse_cipher_address9();
    void thread_inverse_cipher_ce0();
    void thread_inverse_cipher_ce1();
    void thread_inverse_cipher_ce10();
    void thread_inverse_cipher_ce11();
    void thread_inverse_cipher_ce12();
    void thread_inverse_cipher_ce13();
    void thread_inverse_cipher_ce14();
    void thread_inverse_cipher_ce15();
    void thread_inverse_cipher_ce2();
    void thread_inverse_cipher_ce3();
    void thread_inverse_cipher_ce4();
    void thread_inverse_cipher_ce5();
    void thread_inverse_cipher_ce6();
    void thread_inverse_cipher_ce7();
    void thread_inverse_cipher_ce8();
    void thread_inverse_cipher_ce9();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_we0();
    void thread_tmp10_fu_1323_p2();
    void thread_tmp11_fu_1329_p2();
    void thread_tmp12_fu_1342_p2();
    void thread_tmp13_fu_1348_p2();
    void thread_tmp14_fu_1360_p2();
    void thread_tmp15_fu_1366_p2();
    void thread_tmp16_fu_1522_p2();
    void thread_tmp17_fu_1528_p2();
    void thread_tmp18_fu_1541_p2();
    void thread_tmp19_fu_1547_p2();
    void thread_tmp1_fu_1086_p2();
    void thread_tmp20_fu_1560_p2();
    void thread_tmp21_fu_1566_p2();
    void thread_tmp22_fu_1578_p2();
    void thread_tmp23_fu_1584_p2();
    void thread_tmp24_fu_1740_p2();
    void thread_tmp25_fu_1746_p2();
    void thread_tmp26_fu_1759_p2();
    void thread_tmp27_fu_1765_p2();
    void thread_tmp28_fu_1778_p2();
    void thread_tmp29_fu_1784_p2();
    void thread_tmp2_fu_1092_p2();
    void thread_tmp30_fu_1796_p2();
    void thread_tmp31_fu_1802_p2();
    void thread_tmp3_fu_1105_p2();
    void thread_tmp4_fu_1111_p2();
    void thread_tmp5_fu_1124_p2();
    void thread_tmp6_fu_1130_p2();
    void thread_tmp7_fu_1142_p2();
    void thread_tmp8_fu_1148_p2();
    void thread_tmp9_fu_1304_p2();
    void thread_tmp_10_fu_1572_p2();
    void thread_tmp_11_fu_1590_p2();
    void thread_tmp_12_fu_1752_p2();
    void thread_tmp_13_fu_1771_p2();
    void thread_tmp_14_fu_1790_p2();
    void thread_tmp_15_fu_1808_p2();
    void thread_tmp_16_fu_1814_p2();
    void thread_tmp_17_fu_1826_p1();
    void thread_tmp_1_fu_1098_p2();
    void thread_tmp_2_fu_1154_p2();
    void thread_tmp_3_fu_1316_p2();
    void thread_tmp_4_fu_1117_p2();
    void thread_tmp_5_fu_1335_p2();
    void thread_tmp_6_fu_1354_p2();
    void thread_tmp_7_fu_1372_p2();
    void thread_tmp_8_fu_1534_p2();
    void thread_tmp_9_fu_1553_p2();
    void thread_tmp_fu_1310_p2();
    void thread_tmp_s_fu_1136_p2();
    void thread_tmp_state_address0();
    void thread_tmp_state_address1();
    void thread_tmp_state_ce0();
    void thread_tmp_state_ce1();
    void thread_tmp_state_d0();
    void thread_tmp_state_d1();
    void thread_tmp_state_we0();
    void thread_tmp_state_we1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
